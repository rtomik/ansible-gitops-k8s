replicaCount: 1

ingress:
  enabled: true
  className: traefik
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: default-default-headers@kubernetescrd
  hosts:
    - host: git.{{ domain }}
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - git.{{ domain }}

persistence:
  enabled: true
  size: 5Gi
  storageClass: longhorn
  accessModes:
    - ReadWriteOnce

redis-cluster:
  enabled: false

valkey-cluster:
  enabled: false

redis:
  enabled: false

# Disable embedded PostgreSQL - using central database
postgresql-ha:
  enabled: false

postgresql:
  enabled: false

gitea:
  admin:
    existingSecret: gitea-admin-secret
{% if deploy_authentik %}
  oauth:
    - name: "authentik"
      provider: "openidConnect"
      existingSecret: gitea-authentik-secret
      autoDiscoverUrl: "https://authentik.{{ domain }}/application/o/gitea/.well-known/openid-configuration"
      iconUrl: https://authentik.{{ domain }}/static/dist/assets/icons/icon.svg
      scopes: "email profile"
{% endif %}
  config:
    server:
      ROOT_URL: "https://git.{{ domain }}"
      DOMAIN: git.{{ domain }}
      SSH_DOMAIN: git.{{ domain }}
    database:
      DB_TYPE: postgres
      HOST: postgres-cluster-pooler.dbs.svc.cluster.local:5432
      NAME: gitea
      USER: gitea
      PASSWD: "{{ vault_gitea_db_password }}"
    cache:
      ADAPTER: redis
      HOST: network=tcp,addr={{ dragonfly.cluster_name | default('dragonfly-cluster') }}.{{ dragonfly.namespace | default('dbs') }}.svc.cluster.local:6379,password={{ dragonfly.password | default(vault_dragonfly_password) }},db=0,pool_size=100,idle_timeout=180
    session:
      PROVIDER: redis
      PROVIDER_CONFIG: network=tcp,addr={{ dragonfly.cluster_name | default('dragonfly-cluster') }}.{{ dragonfly.namespace | default('dbs') }}.svc.cluster.local:6379,password={{ dragonfly.password | default(vault_dragonfly_password) }},db=1,pool_size=100,idle_timeout=180
    queue:
      TYPE: redis
      CONN_STR: redis://:{{ dragonfly.password | default(vault_dragonfly_password) }}@{{ dragonfly.cluster_name | default('dragonfly-cluster') }}.{{ dragonfly.namespace | default('dbs') }}.svc.cluster.local:6379/2
    oauth2_client:
      ENABLE_AUTO_REGISTRATION: true
    indexer:
      ISSUE_INDEXER_TYPE: bleve
      REPO_INDEXER_ENABLED: true
    log:
      LEVEL: debug