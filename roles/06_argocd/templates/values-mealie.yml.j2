---
mealie:
  ingress:
    enabled: true
    className: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    hosts:
      - host: mealie.{{ domain }}
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - mealie.{{ domain }}

  persistence:
    enabled: true
    storageClass: "longhorn"
    accessMode: ReadWriteOnce
    size: 3Gi

  ## Environment variables
  env:
    # General Settings
    PUID: "911"
    PGID: "911"
    DEFAULT_GROUP: "Home"
    DEFAULT_HOUSEHOLD: "Family"
    BASE_URL: "http://localhost:9000"
    TOKEN_TIME: "48"
    API_PORT: "9000"
    API_DOCS: "true"
    TZ: "{{ timezone }}"
    ALLOW_SIGNUP: "false"
    ALLOW_PASSWORD_LOGIN: "true"
    LOG_LEVEL: "info"
    DAILY_SCHEDULE_TIME: "23:45"
    
    # Security
    SECURITY_MAX_LOGIN_ATTEMPTS: "5"
    SECURITY_USER_LOCKOUT_TIME: "24"
    
    # Database
    DB_ENGINE: "postgres"
    
    # Webworker
    UVICORN_WORKERS: "1"

  postgresql:
    enabled: true
    # External PostgreSQL settings
    external:
      enabled: true
      host: "postgres-cluster-pooler.dbs.svc.cluster.local"
      port: 5432
      database: "mealie"
      # Use existing secret for database credentials
      existingSecret: "mealie-db-credentials"
      userKey: "username"
      passwordKey: "password"

{% if deploy_authentik %}
  oidc:
    enabled: true
    signupEnabled: true
    configurationUrl: "https://authentik.{{ domain }}/application/o/mealie/.well-known/openid-configuration"
    userGroup: ""
    adminGroup: "authentik Admins"
    autoRedirect: false
    providerName: "authentik"
    rememberMe: true
    signingAlgorithm: "RS256"
    userClaim: "email"
    nameClaim: "name"
    groupsClaim: "groups"
    scopesOverride: ""
    # Use existing secret for OIDC credentials
    existingSecret: "mealie-authentik-credentials"
    clientIdKey: "authentik_client_id"
    clientSecretKey: "authentik_client_secret"
{% endif %}
