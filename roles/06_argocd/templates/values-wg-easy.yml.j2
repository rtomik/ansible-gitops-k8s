wg-easy:
  ingress:
    enabled: true
    className: "traefik"
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: default-default-headers@kubernetescrd
    hosts:
      - host: wgeasy.{{ domain }}
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - wgeasy.{{ domain }}

  volume:
    enabled: true
    className: longhorn
    size: 100m

  command:
    - /bin/sh
    - -c
    - |
      echo "Enabling IP forwarding"
      sysctl -w net.ipv4.ip_forward=1
      
      # Clear existing POSTROUTING and FORWARD rules to avoid conflicts
      iptables -t nat -F POSTROUTING
      iptables -F FORWARD
      
      # Allow forwarding between interfaces
      iptables -A FORWARD -i wg0 -o eth0 -j ACCEPT
      iptables -A FORWARD -i eth0 -o wg0 -m state --state RELATED,ESTABLISHED -j ACCEPT
      
      # Critical fix: Ensure the WireGuard server knows how to route back to clients
      iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
      
      # Tell the kernel to route packets between interfaces
      echo 1 > /proc/sys/net/ipv4/ip_forward
      
      exec node server.js

  environmentVariables:
    LANG: en
    WG_HOST: wgeasy.{{ domain }}
    WG_PORT: "51820"
    WG_PERSISTENT_KEEPALIVE: "25"
    WG_DEFAULT_ADDRESS: "10.8.0.x"
    # Leave these IPs as is - they're correctly configured
    WG_ALLOWED_IPS: "10.42.0.0/16,10.43.0.0/16,10.8.0.0/24,192.168.1.0/24"
    WG_DEFAULT_DNS: "1.1.1.1"
    PASSWORD: "test"

  securityContext:
    privileged: true