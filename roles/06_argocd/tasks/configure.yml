- name: Get git api token
  block:
    - name: Get Gitea API token from secret
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: gitea-api-token
        namespace: argocd
      register: gitea_token_secret

    - name: Set API token fact
      ansible.builtin.set_fact:
        gitea_api_token: "{{ gitea_token_secret.resources[0].data.api_token | b64decode }}"
      no_log: true
      when: gitea_token_secret.resources is defined and gitea_token_secret.resources | length > 0

    - name: Verify API token was retrieved
      ansible.builtin.fail:
        msg: "Failed to retrieve Gitea API token from Kubernetes secret"
      when: gitea_api_token is not defined or gitea_api_token | length == 0

- name: Install ArgoCD cli
  block:
    - name: Check if ArgoCD CLI is already installed
      ansible.builtin.command: which argocd
      register: argocd_cli_check
      changed_when: false
      failed_when: false

    - name: Get installed ArgoCD CLI version
      ansible.builtin.command: argocd version --client
      register: argocd_current_version
      changed_when: false
      failed_when: false
      when: argocd_cli_check.rc == 0

    - name: Get latest ArgoCD version
      ansible.builtin.shell: |
        curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/'
      register: argocd_latest_version
      changed_when: false

    - name: Download and install ArgoCD CLI
      ansible.builtin.shell: |
        ARGOCD_VERSION="{{ argocd_latest_version.stdout }}"
        curl -sSL -o /tmp/argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/${ARGOCD_VERSION}/argocd-linux-amd64
        chmod +x /tmp/argocd-linux-amd64
        sudo mv /tmp/argocd-linux-amd64 /usr/local/bin/argocd
      when: >
        argocd_cli_check.rc != 0 or
        (argocd_current_version.rc == 0 and argocd_latest_version.stdout not in argocd_current_version.stdout)

- name: Connect ArgoCD to git repo
  block:
      # Configure ArgoCD with Git repository access
    - name: Get ArgoCD admin password
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: argocd-initial-admin-secret
        namespace: argocd
      register: argocd_admin_secret

    - name: Set ArgoCD admin password fact
      ansible.builtin.set_fact:
        argocd_admin_password: "{{ argocd_admin_secret.resources[0].data.password | b64decode }}"
      no_log: true
      when: argocd_admin_secret.resources is defined and argocd_admin_secret.resources | length > 0

    - name: Login to ArgoCD
      ansible.builtin.shell: |
        argocd login argocd.{{ domain }} \
          --username admin \
          --password {{ argocd_admin_password }} \
          --insecure
      environment:
        ARGOCD_SERVER: "argocd.{{ domain }}"
      register: argocd_login
      changed_when: argocd_login.rc == 0
      failed_when: argocd_login.rc != 0
      no_log: true

    - name: Configure Git repository in ArgoCD
      ansible.builtin.shell: |
        argocd repo add https://git.{{ domain }}/{{ git_organization_name }}/{{ git_repo_name }}.git \
          --username admin \
          --password {{ gitea_api_token }} \
          --insecure
      environment:
        ARGOCD_SERVER: "argocd.{{ domain }}"
      register: argocd_repo_add
      changed_when: argocd_repo_add.rc == 0
      failed_when: argocd_repo_add.rc != 0 and "already exists" not in argocd_repo_add.stderr
      no_log: true
