---
# ----- Required variables --------- #

# Time and language configuration
timezone: "UTC" # Change this to your desired time zone, e.g., "America/New_York"
lang: en_US.UTF-8 # Change this to your language eg. en_US.UTF-8 used for lubelogger

# Define IP for kubevip loadbalancer
kube_vip_address: "192.168.1.200" # free ip in your network range

# --- Domain Configuration --- #
# Create A record:
# *.<domain>, Answer <kube_vip_address> ex. 192.168.1.200
domain: mydomain.com
email: my@email.com

# --- Cloudflare --- #
# If you want to use TLS certificates
# Cloudflare api token settings:
# Permissions: Zone - DNS - Edit; Zone - Zone - Edit
# Zone Resources: Include - All Zones
enable_cloudflare: false
cloudflare_api_token: "<cloudflare api>"
tls_secret_name: "wildcard-{{ domain }}-tls"

# --- Git --- #
# Gitea is used as main git repo currently
deploy_gitea: true
git_organization_name: "homelab"
git_repo_name: "argocd"
deploy_gitlab: false

# --- VPN Access --- #
# If you want to access the cluster via Tailscale VPN
tailscale:
  enabled: false
  auth_key: "<tailscale auth key>"
  # Define your local subnet ex. 192.168.1.0/24
  subnet: 192.168.1.0/24
  hostname: "rke2-cluster"
  version: "latest"
  image_pull_policy: "IfNotPresent"
  force_update: false
  extra_routes: []
  tags: []

# --- External Storage --- #

external_storage:
  enabled: true
  nas:
    # SMB/CIFS Example
    - name: "smb"
      enabled: false
      type: "smb" # smb, nfs, or sftp
      server: "//storagebox.de/user/media"

      # SMB specific settings
      smb:
        driver_version: "v1.18.0"
        user: ""
        password: ""

      # Storage configuration
      size: "1Ti"
      storage_class: "media-storage"
      reclaim_policy: "Retain"  # Options: Retain, Delete, Recycle
      access_mode: "ReadWriteMany"

    # SFTP Example
    - name: "media"
      enabled: false
      type: "sftp"
      server: "000000-sub1.your-storagebox.de"  

      # SFTP specific settings
      ssh:
        port: "23"
      sftp:
        user: "000000-sub1"  # Your storage box username
        port: "22"
        path: "/media"       # Root path or subdirectory like "/backup"
        password: ""

        # Optional settings
        image: "alpine:3.18"
        health_check_interval: "30"
        extra_options:
          - "cache=yes"
          - "cache_timeout=60"

      # Storage configuration
      size: "1Ti"
      reclaim_policy: "Retain"
      access_mode: "ReadWriteMany"

    # NFS Example
    - name: "nfs"
      enabled: false
      type: "nfs"
      server: "192.168.1.100"

      # NFS specific settings
      nfs:
        path: "/volume1/kubernetes"
        mount_options: "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2"

      # Storage configuration
      size: "2Ti"
      storage_class: "nfs-fast"
      reclaim_policy: "Retain"
      access_mode: "ReadWriteMany"

  # Define your applications that need storage
  applications:
    qbittorrent:
      enabled: true
      storage_name: "media"  # Must match one of the 'name' fields above
      namespace: "arr"
      size: "500Gi"
      pvc_name: qbittorrent-data

# --- Apps --- #
# Define which app to deploy
# Allowed values true/false

# Monitoring
deploy_prometheus: true
deploy_grafana: true
deploy_loki: true

# infrastructure
deploy_rancher: true
deploy_authentik: true
deploy_renovate: true
deploy_wg_easy: false

# Apps
deploy_audiobookshelf: true
deploy_homeassistant: true
deploy_recipya: true
deploy_open_webui: true
deploy_jellyfin: true
deploy_arr: true # Will deploy sonarr radarr jellyserr qbittorrent-vpn
deploy_homepage: true
deploy_donetick: true
deploy_paperless_ngx: true
deploy_lubelogger: true
deploy_n8n: true

# --- qbittorrent-vpn --- #
# If you enabled arr
# If you want to use qbittorrent behind vpn to hide your ip
# It will install gluetun sidecar to route traffic through vpn provider of your choice
# More info https://github.com/qdm12/gluetun
vpn:
  enabled: false
  # Choose from: nordvpn, protonvpn, expressvpn, surfshark, mullvad, ivpn, private internet access, etc.
  # More info https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers
  provider: "nordvpn"
  # Choose from: openvpn or wireguard
  type: "openvpn"
    # Server selection (comma-separated lists)
  server_countries: "Netherlands"  # e.g., "Netherlands,Germany,Sweden"
  server_cities: ""            # e.g., "Amsterdam,Frankfurt" (optional)
  server_names: ""             # e.g., "nl1,nl2" (optional)
  randomize: "true"           # Randomize server selection
  # WireGuard specific settings (when type is "wireguard")
  wireguard:
    private_key: ""  # Will be stored in Secret if provided
    private_key_existing_secret: ""
    private_key_existing_secret_key: ""
    addresses: ""   # e.g., "10.64.222.21/32"
    endpoint_ip: ""  # Optional: specify endpoint IP
    endpoint_port: ""  # Optional: specify endpoint port
    public_key: ""   # Optional: server public key
  # VPN credentials (choose one method)
  credentials:
    create: true # set to false if using existing secret
    # For OpenVPN (normal credentials)
    username: ""
    password: ""
    # Alternatively, reference an existing secret
    existingSecret: ""
    usernameKey: "username"
    passwordKey: "password"

# ----- Optional variables --------- #

# RKE2 cluster variables
rke2_version: "v1.32.6+rke2r1"
install_rke2_type: "server"
kube_vip_version: "v0.9.1"
rke2_hostname: "rke2.{{ domain }}"

# Helm chart versions
# Infrastructure
traefik_version: 34.4.1
certmanager_version: 1.16.3
argocd_version: 7.8.15
longhorn_version: 1.8.1
authentik_version: 2024.12.2
rancher_version: 2.11.3
metallb_version: 0.14.9
gitlab_version: 8.8.0
gitea_version: 11.0.1
reflector_version: 7.1.288
renovate_version: 39.251.0
wg_easy_version: 0.1.2

# Monitoring
prometheus_stack_version: 70.4.1
prometheus_crds_version: 19.0.0
grafana_version: 8.8.5
loki_version: 6.24.1
promtail_version: 6.16.5

# Apps
jellyfin_version: 2.3.0
homepage_version: 2.0.2
audiobookshelf_version: 0.0.1
openwebui_version: 5.24.0
donetick_version: 1.0.1
tandoor_version: 0.9.9
paperless_ngx_version: 0.24.1
recipya_version: 0.0.2
radarr_version: 1.14.0
sonarr_version: 1.10.1
prowlarr_version: 1.41.1
qbittorrent_vpn_version: 0.0.1
jellyseerr_version: 0.0.1
lubelogger_version: 0.6.2
n8n_version: 1.13.8
velero_version: 10.0.11


# --- Backup Configuration --- #
# Optional automated backup solution using Velero
backup:
  enabled: "{{ deploy_velero }}"
  
  # Storage backend for backups (choose one)
  storage:
    # AWS S3 
    aws_s3:
      enabled: false
      bucket: "my-cluster-backups"
      region: "us-west-2"
      # Use IAM roles or store in vault
      access_key: "{{ vault_aws_access_key | default('') }}"
      secret_key: "{{ vault_aws_secret_key | default('') }}"
    
    # Backblaze B2 (S3-compatible)
    backblaze_b2:
      enabled: false
      bucket: "my-cluster-backups"
      # Backblaze B2 uses us-west-000 for S3 compatibility
      region: "us-west-000"
      endpoint: "https://s3.us-west-000.backblazeb2.com"
      # Application Key ID and Application Key from Backblaze
      access_key: "{{ vault_backblaze_key_id | default('') }}"
      secret_key: "{{ vault_backblaze_key | default('') }}"
    
    # Local NAS via NFS
    local_nas:
      enabled: true
      # NFS server configuration
      nfs:
        server: "192.168.1.100"
        path: "/volume1/backups/kubernetes"
        mount_options: "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2"
      # Local storage path for backups
      local_path: "/mnt/nas-backups"
      # Storage size allocation
      size: "500Gi"

  # Backup schedules and retention
  schedules:
    # Full cluster backup (daily at 2 AM)
    daily_backup:
      enabled: true
      schedule: "0 2 * * *"
      ttl: "720h0m0s"  # 30 days retention
      include_namespaces: []  # empty = all namespaces
      exclude_namespaces: ["kube-system", "kube-public", "kube-node-lease"]
      
    # Critical data backup (every 6 hours)
    critical_backup:
      enabled: true
      schedule: "0 */6 * * *"
      ttl: "168h0m0s"  # 7 days retention
      include_namespaces: ["authentik", "argocd", "monitoring", "longhorn-system"]
      exclude_namespaces: []
      
    # Application data backup (weekly on Sunday at 1 AM)
    weekly_backup:
      enabled: true
      schedule: "0 1 * * 0"
      ttl: "2160h0m0s"  # 90 days retention
      include_namespaces: ["arr", "n8n", "paperless-ngx", "audiobookshelf"]
      exclude_namespaces: []

  # Volume snapshot support
  volume_snapshots:
    enabled: true
    # CSI driver for Longhorn
    csi_driver: "driver.longhorn.io"

  # Monitoring and alerting
  monitoring:
    enabled: true
    # Create ServiceMonitor for Prometheus
    service_monitor: true
    # Send alerts on backup failures
    alerting: true


# Server configuration
perform_full_upgrade: true
disable_ipv6: false

# Define user which will run ansible playbooks on target machine
user: ansible
ansible_user: "{{ user }}"
ansible_initial_user: root

# Vault
vault_file: "../group_vars/vault.yml"
vault_password_file: "../.vault"
