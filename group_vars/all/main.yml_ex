---
# ----- Required variables --------- #

# Time and language configuration
timezone: "America/New_York" # Change this to your desired time zone, e.g., "America/New_York"
lang: en_US.UTF-8 # Change this to your language eg. en_US.UTF-8 used for lubelogger

# Define IP for kubevip loadbalancer
kube_vip_address: "192.168.1.200"

# Domain configuration
# Create A record:
# *.<domain>, Answer <kube_vip_address> ex. 192.168.1.200
domain: <DOMAIN>
email: <EMAIL>

# --- Cloudflare --- #
# If you want to use TLS certificates on apps enable cloudflare and define API token
# Cloudflare api token settings:
# Permissions: Zone - DNS - Edit; Zone - Zone - Edit
# Zone Resources: Include - All Zones
enable_cloudflare: false
cloudflare_api_token: "<cloudflare api>"
tls_secret_name: "wildcard-{{ domain }}-tls"

# --- Git --- #
deploy_gitea: true
git_organization_name: "homelab"
git_repo_name: "argocd"
deploy_gitlab: false

# --- Backup --- #
# Choose your backup solution
# Backblaze
# Create b2 bucket https://secure.backblaze.com/b2_buckets.htm
enable_backblaze: true
# NFS, Samba, CIFS configuration
# More info
# https://longhorn.io/docs/1.8.1/snapshots-and-backups/backup-and-restore/set-backup-target/set-up-nfs-backupstore
enable_nfs: false

# --- Apps --- #
# Define which app to deploy
# Allowed values true/false
# Monitoring
deploy_prometheus: true
deploy_grafana: true
deploy_loki: true

# infrastructure
deploy_rancher: true
deploy_authentik: true
deploy_renovate: true
deploy_wg_easy: true

# Apps
deploy_audiobookshelf: true
deploy_homeassistant: true
deploy_recipya: true
deploy_open_webui: true
deploy_jellyfin: true
deploy_arr: true # Will deploy sonarr radarr jellyserr qbittorrent-vpn
deploy_homepage: true
deploy_donetick: true
deploy_paperless_ngx: true
deploy_lubelogger: true

# --- qbittorrent-vpn --- #
# If you enabled arr
# If you want to use qbittorrent behind vpn to hide your ip
# It will install gluetun sidecar to route traffic through vpn provider of your choice
# More info https://github.com/qdm12/gluetun
vpn:
  enabled: true
  # Choose from: nordvpn, protonvpn, expressvpn, surfshark, mullvad, ivpn, private internet access, etc.
  # More info https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers
  provider: "nordvpn"
  # Choose from: openvpn or wireguard
  type: "openvpn"
    # Server selection (comma-separated lists)
  server_countries: "Netherlands"  # e.g., "Netherlands,Germany,Sweden"
  server_cities: ""            # e.g., "Amsterdam,Frankfurt" (optional)
  server_names: ""             # e.g., "nl1,nl2" (optional)
  randomize: "true"           # Randomize server selection
  # WireGuard specific settings (when type is "wireguard")
  wireguard:
    private_key: ""  # Will be stored in Secret if provided
    private_key_existing_secret: ""
    private_key_existing_secret_key: ""
    addresses: ""   # e.g., "10.64.222.21/32"
    endpoint_ip: ""  # Optional: specify endpoint IP
    endpoint_port: ""  # Optional: specify endpoint port
    public_key: ""   # Optional: server public key
  # VPN credentials (choose one method)
  credentials:
    create: true # set to false if using existing secret
    # For OpenVPN (normal credentials)
    username: ""
    password: ""
    # Alternatively, reference an existing secret
    existingSecret: ""
    usernameKey: "username"
    passwordKey: "password"

# ----- Optional variables --------- #

# RKE2 cluster variables
rke2_version: "v1.32.3+rke2r1"
install_rke2_type: "server"
kube_vip_version: "v0.9.1"
rke2_hostname: "rke2.{{ domain }}"

# Helm chart versions
# Infrastructure
traefik_version: 34.4.1
certmanager_version: 1.16.3
argocd_version: 7.8.15
longhorn_version: 1.8.1
authentik_version: 2024.12.2
rancher_version: 2.11.1
metallb_version: 0.14.9
gitlab_version: 8.8.0
gitea_version: 11.0.1
reflector_version: 7.1.288
renovate_version: 39.251.0
wg_easy_version: 0.1.2

# Monitoring
prometheus_stack_version: 70.4.1
prometheus_crds_version: 19.0.0
grafana_version: 8.8.5
loki_version: 6.24.1
promtail_version: 6.16.5

# Apps
jellyfin_version: 2.3.0
homepage_version: 2.0.2
audiobookshelf_version: 0.0.1
openwebui_version: 5.24.0
donetick_version: 1.0.1
tandoor_version: 0.9.9
paperless_ngx_version: 0.24.1
recipya_version: 0.0.2
radarr_version: 1.15.1
sonarr_version: 1.10.1
prowlarr_version: 1.41.1
qbittorrent_vpn_version: 0.0.1
jellyseerr_version: 0.0.1
lubelogger_version: 0.6.2

# Server configuration
perform_full_upgrade: true
disable_ipv6: false

# Define user which will run ansible playbooks on target machine
user: ansible
ansible_user: "{{ user }}"
ansible_initial_user: root

# Vault
vault_file: "../group_vars/vault.yml"
vault_password_file: "../.vault"
